[2019-07-20T10:06:07.990] [DEBUG] default - Starting server...! at <anonymous> (app.js:55:5)
[2019-07-20T10:06:08.069] [INFO] default - Connection to the database has been established successfully. at sequelize.authenticate.then (db/models/index.js:59:9)
[2019-07-20T10:06:08.078] [INFO] default - Listening on:  port 8888 at onListening (bin/www:81:7)
[2019-07-20T10:10:07.462] [DEBUG] default -  ==== Request information ====  at <anonymous> (app.js:93:7)
[2019-07-20T10:10:07.463] [DEBUG] default - Original URL:  /backend/user/create at <anonymous> (app.js:94:7)
[2019-07-20T10:10:07.463] [DEBUG] default - Method:  POST at <anonymous> (app.js:95:7)
[2019-07-20T10:10:07.463] [DEBUG] default - Path params:  {} at <anonymous> (app.js:96:7)
[2019-07-20T10:10:07.463] [DEBUG] default - Query params:  {} at <anonymous> (app.js:97:7)
[2019-07-20T10:10:07.463] [DEBUG] default -  ==== End request information ====  at <anonymous> (app.js:98:7)
[2019-07-20T10:10:07.544] [ERROR] default - Error before sending response:  ServerResponse {
  _events:
   [Object: null prototype] { finish: [Function: bound resOnFinish] },
  _eventsCount: 1,
  _maxListeners: undefined,
  output: [],
  outputEncodings: [],
  outputCallbacks: [],
  outputSize: 0,
  writable: true,
  _last: false,
  chunkedEncoding: false,
  shouldKeepAlive: true,
  useChunkedEncodingByDefault: true,
  sendDate: true,
  _removedConnection: false,
  _removedContLen: false,
  _removedTE: false,
  _contentLength: null,
  _hasBody: true,
  _trailer: '',
  finished: false,
  _headerSent: false,
  socket:
   Socket {
     connecting: false,
     _hadError: false,
     _handle:
      TCP {
        reading: true,
        onread: [Function: onStreamRead],
        onconnection: null,
        _consumed: true,
        [Symbol(owner)]: [Circular] },
     _parent: null,
     _host: null,
     _readableState:
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: BufferList { head: null, tail: null, length: 0 },
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        paused: false,
        emitClose: false,
        autoDestroy: false,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     _events:
      [Object: null prototype] {
        end: [Array],
        drain: [Array],
        timeout: [Function: socketOnTimeout],
        data: [Function: bound socketOnData],
        error: [Function: socketOnError],
        close: [Array],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 8,
     _maxListeners: undefined,
     _writableState:
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        emitClose: false,
        autoDestroy: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server:
      Server {
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [TCP],
        _usingWorkers: false,
        _workers: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::8888',
        [Symbol(IncomingMessage)]: [Function],
        [Symbol(ServerResponse)]: [Function],
        [Symbol(asyncId)]: 87 },
     _server:
      Server {
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [TCP],
        _usingWorkers: false,
        _workers: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::8888',
        [Symbol(IncomingMessage)]: [Function],
        [Symbol(ServerResponse)]: [Function],
        [Symbol(asyncId)]: 87 },
     timeout: 120000,
     parser:
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: bound onParserExecute],
        _headers: [],
        _url: '',
        socket: [Circular],
        incoming: [IncomingMessage],
        outgoing: null,
        maxHeaderPairs: 2000,
        _consumed: true,
        onIncoming: [Function: bound parserOnIncoming],
        parsingHeadersStart: 1563592207444,
        [Symbol(isReused)]: false },
     on: [Function: socketOnWrap],
     _paused: false,
     _httpMessage: [Circular],
     [Symbol(asyncId)]: 343,
     [Symbol(lastWriteQueueSize)]: 0,
     [Symbol(timeout)]:
      Timeout {
        _called: false,
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 239932,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(unrefed)]: true,
        [Symbol(asyncId)]: 344,
        [Symbol(triggerId)]: 343 },
     [Symbol(kBytesRead)]: 0,
     [Symbol(kBytesWritten)]: 0 },
  connection:
   Socket {
     connecting: false,
     _hadError: false,
     _handle:
      TCP {
        reading: true,
        onread: [Function: onStreamRead],
        onconnection: null,
        _consumed: true,
        [Symbol(owner)]: [Circular] },
     _parent: null,
     _host: null,
     _readableState:
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: BufferList { head: null, tail: null, length: 0 },
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        paused: false,
        emitClose: false,
        autoDestroy: false,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     _events:
      [Object: null prototype] {
        end: [Array],
        drain: [Array],
        timeout: [Function: socketOnTimeout],
        data: [Function: bound socketOnData],
        error: [Function: socketOnError],
        close: [Array],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 8,
     _maxListeners: undefined,
     _writableState:
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        emitClose: false,
        autoDestroy: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server:
      Server {
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [TCP],
        _usingWorkers: false,
        _workers: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::8888',
        [Symbol(IncomingMessage)]: [Function],
        [Symbol(ServerResponse)]: [Function],
        [Symbol(asyncId)]: 87 },
     _server:
      Server {
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [TCP],
        _usingWorkers: false,
        _workers: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::8888',
        [Symbol(IncomingMessage)]: [Function],
        [Symbol(ServerResponse)]: [Function],
        [Symbol(asyncId)]: 87 },
     timeout: 120000,
     parser:
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: bound onParserExecute],
        _headers: [],
        _url: '',
        socket: [Circular],
        incoming: [IncomingMessage],
        outgoing: null,
        maxHeaderPairs: 2000,
        _consumed: true,
        onIncoming: [Function: bound parserOnIncoming],
        parsingHeadersStart: 1563592207444,
        [Symbol(isReused)]: false },
     on: [Function: socketOnWrap],
     _paused: false,
     _httpMessage: [Circular],
     [Symbol(asyncId)]: 343,
     [Symbol(lastWriteQueueSize)]: 0,
     [Symbol(timeout)]:
      Timeout {
        _called: false,
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 239932,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(unrefed)]: true,
        [Symbol(asyncId)]: 344,
        [Symbol(triggerId)]: 343 },
     [Symbol(kBytesRead)]: 0,
     [Symbol(kBytesWritten)]: 0 },
  _header: null,
  _onPendingData: [Function: bound updateOutgoingData],
  _sent100: false,
  _expect_continue: false,
  req:
   IncomingMessage {
     _readableState:
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: BufferList { head: null, tail: null, length: 0 },
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: true,
        endEmitted: true,
        reading: false,
        sync: false,
        needReadable: false,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        paused: false,
        emitClose: true,
        autoDestroy: false,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: false,
     _events:
      [Object: null prototype] { end: [Function: resetHeadersTimeoutOnReqEnd] },
     _eventsCount: 1,
     _maxListeners: undefined,
     socket:
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [TCP],
        _parent: null,
        _host: null,
        _readableState: [ReadableState],
        readable: true,
        _events: [Object],
        _eventsCount: 8,
        _maxListeners: undefined,
        _writableState: [WritableState],
        writable: true,
        allowHalfOpen: true,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Server],
        _server: [Server],
        timeout: 120000,
        parser: [HTTPParser],
        on: [Function: socketOnWrap],
        _paused: false,
        _httpMessage: [Circular],
        [Symbol(asyncId)]: 343,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]:
         Timeout {
           _called: false,
           _idleTimeout: 120000,
           _idlePrev: [TimersList],
           _idleNext: [TimersList],
           _idleStart: 239932,
           _onTimeout: [Function: bound ],
           _timerArgs: undefined,
           _repeat: null,
           _destroyed: false,
           [Symbol(unrefed)]: true,
           [Symbol(asyncId)]: 344,
           [Symbol(triggerId)]: 343 },
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0 },
     connection:
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [TCP],
        _parent: null,
        _host: null,
        _readableState: [ReadableState],
        readable: true,
        _events: [Object],
        _eventsCount: 8,
        _maxListeners: undefined,
        _writableState: [WritableState],
        writable: true,
        allowHalfOpen: true,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Server],
        _server: [Server],
        timeout: 120000,
        parser: [HTTPParser],
        on: [Function: socketOnWrap],
        _paused: false,
        _httpMessage: [Circular],
        [Symbol(asyncId)]: 343,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]:
         Timeout {
           _called: false,
           _idleTimeout: 120000,
           _idlePrev: [TimersList],
           _idleNext: [TimersList],
           _idleStart: 239932,
           _onTimeout: [Function: bound ],
           _timerArgs: undefined,
           _repeat: null,
           _destroyed: false,
           [Symbol(unrefed)]: true,
           [Symbol(asyncId)]: 344,
           [Symbol(triggerId)]: 343 },
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0 },
     httpVersionMajor: 1,
     httpVersionMinor: 1,
     httpVersion: '1.1',
     complete: true,
     headers:
      { 'content-type': 'application/x-www-form-urlencoded',
        'cache-control': 'no-cache',
        'postman-token': '2044ae98-d8ff-4671-a359-b0720cdbde8c',
        'user-agent': 'PostmanRuntime/7.6.0',
        accept: '*/*',
        host: 'localhost:8888',
        'accept-encoding': 'gzip, deflate',
        'content-length': '135',
        connection: 'keep-alive' },
     rawHeaders:
      [ 'Content-Type',
        'application/x-www-form-urlencoded',
        'cache-control',
        'no-cache',
        'Postman-Token',
        '2044ae98-d8ff-4671-a359-b0720cdbde8c',
        'User-Agent',
        'PostmanRuntime/7.6.0',
        'Accept',
        '*/*',
        'Host',
        'localhost:8888',
        'accept-encoding',
        'gzip, deflate',
        'content-length',
        '135',
        'Connection',
        'keep-alive' ],
     trailers: {},
     rawTrailers: [],
     aborted: false,
     upgrade: false,
     url: '/create',
     method: 'POST',
     statusCode: null,
     statusMessage: null,
     client:
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [TCP],
        _parent: null,
        _host: null,
        _readableState: [ReadableState],
        readable: true,
        _events: [Object],
        _eventsCount: 8,
        _maxListeners: undefined,
        _writableState: [WritableState],
        writable: true,
        allowHalfOpen: true,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Server],
        _server: [Server],
        timeout: 120000,
        parser: [HTTPParser],
        on: [Function: socketOnWrap],
        _paused: false,
        _httpMessage: [Circular],
        [Symbol(asyncId)]: 343,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]:
         Timeout {
           _called: false,
           _idleTimeout: 120000,
           _idlePrev: [TimersList],
           _idleNext: [TimersList],
           _idleStart: 239932,
           _onTimeout: [Function: bound ],
           _timerArgs: undefined,
           _repeat: null,
           _destroyed: false,
           [Symbol(unrefed)]: true,
           [Symbol(asyncId)]: 344,
           [Symbol(triggerId)]: 343 },
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0 },
     _consuming: true,
     _dumped: false,
     next: [Function: next],
     baseUrl: '/backend/user',
     originalUrl: '/backend/user/create',
     _parsedUrl:
      Url {
        protocol: null,
        slashes: null,
        auth: null,
        host: null,
        port: null,
        hostname: null,
        hash: null,
        search: null,
        query: null,
        pathname: '/create',
        path: '/create',
        href: '/create',
        _raw: '/create' },
     params: {},
     query: {},
     res: [Circular],
     body:
      { username: 'Admin',
        password: 'P@ssw0rd',
        fullname: 'Nguyễn Nhựt Huy',
        phone: '0389423079',
        birthday: '21/09/1996',
        position: 'Admin' },
     _body: true,
     length: undefined,
     route: Route { path: '/create', stack: [Array], methods: [Object] } },
  locals: [Object: null prototype] {},
  sendError: [Function],
  sendSuccess: [Function],
  [Symbol(isCorked)]: false,
  [Symbol(outHeadersKey)]:
   [Object: null prototype] {
     'x-powered-by': [ 'X-Powered-By', 'Express' ],
     'access-control-allow-origin': [ 'Access-Control-Allow-Origin', '*' ] } } at sendError (app.js:59:9)
[2019-07-20T10:13:10.874] [DEBUG] default - Starting server...! at <anonymous> (app.js:55:5)
[2019-07-20T10:13:10.939] [INFO] default - Connection to the database has been established successfully. at sequelize.authenticate.then (db/models/index.js:59:9)
[2019-07-20T10:13:10.944] [INFO] default - Listening on:  port 8888 at onListening (bin/www:81:7)
[2019-07-20T10:13:41.115] [DEBUG] default -  ==== Request information ====  at <anonymous> (app.js:93:7)
[2019-07-20T10:13:41.115] [DEBUG] default - Original URL:  /backend/user/create at <anonymous> (app.js:94:7)
[2019-07-20T10:13:41.115] [DEBUG] default - Method:  POST at <anonymous> (app.js:95:7)
[2019-07-20T10:13:41.116] [DEBUG] default - Path params:  {} at <anonymous> (app.js:96:7)
[2019-07-20T10:13:41.116] [DEBUG] default - Query params:  {} at <anonymous> (app.js:97:7)
[2019-07-20T10:13:41.116] [DEBUG] default -  ==== End request information ====  at <anonymous> (app.js:98:7)
[2019-07-20T10:13:41.197] [ERROR] default - Error before sending response:  ServerResponse {
  _events:
   [Object: null prototype] { finish: [Function: bound resOnFinish] },
  _eventsCount: 1,
  _maxListeners: undefined,
  output: [],
  outputEncodings: [],
  outputCallbacks: [],
  outputSize: 0,
  writable: true,
  _last: false,
  chunkedEncoding: false,
  shouldKeepAlive: true,
  useChunkedEncodingByDefault: true,
  sendDate: true,
  _removedConnection: false,
  _removedContLen: false,
  _removedTE: false,
  _contentLength: null,
  _hasBody: true,
  _trailer: '',
  finished: false,
  _headerSent: false,
  socket:
   Socket {
     connecting: false,
     _hadError: false,
     _handle:
      TCP {
        reading: true,
        onread: [Function: onStreamRead],
        onconnection: null,
        _consumed: true,
        [Symbol(owner)]: [Circular] },
     _parent: null,
     _host: null,
     _readableState:
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: BufferList { head: null, tail: null, length: 0 },
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        paused: false,
        emitClose: false,
        autoDestroy: false,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     _events:
      [Object: null prototype] {
        end: [Array],
        drain: [Array],
        timeout: [Function: socketOnTimeout],
        data: [Function: bound socketOnData],
        error: [Function: socketOnError],
        close: [Array],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 8,
     _maxListeners: undefined,
     _writableState:
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        emitClose: false,
        autoDestroy: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server:
      Server {
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [TCP],
        _usingWorkers: false,
        _workers: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::8888',
        [Symbol(IncomingMessage)]: [Function],
        [Symbol(ServerResponse)]: [Function],
        [Symbol(asyncId)]: 87 },
     _server:
      Server {
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [TCP],
        _usingWorkers: false,
        _workers: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::8888',
        [Symbol(IncomingMessage)]: [Function],
        [Symbol(ServerResponse)]: [Function],
        [Symbol(asyncId)]: 87 },
     timeout: 120000,
     parser:
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: bound onParserExecute],
        _headers: [],
        _url: '',
        socket: [Circular],
        incoming: [IncomingMessage],
        outgoing: null,
        maxHeaderPairs: 2000,
        _consumed: true,
        onIncoming: [Function: bound parserOnIncoming],
        parsingHeadersStart: 1563592421098,
        [Symbol(isReused)]: false },
     on: [Function: socketOnWrap],
     _paused: false,
     _httpMessage: [Circular],
     [Symbol(asyncId)]: 134,
     [Symbol(lastWriteQueueSize)]: 0,
     [Symbol(timeout)]:
      Timeout {
        _called: false,
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 30694,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(unrefed)]: true,
        [Symbol(asyncId)]: 135,
        [Symbol(triggerId)]: 134 },
     [Symbol(kBytesRead)]: 0,
     [Symbol(kBytesWritten)]: 0 },
  connection:
   Socket {
     connecting: false,
     _hadError: false,
     _handle:
      TCP {
        reading: true,
        onread: [Function: onStreamRead],
        onconnection: null,
        _consumed: true,
        [Symbol(owner)]: [Circular] },
     _parent: null,
     _host: null,
     _readableState:
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: BufferList { head: null, tail: null, length: 0 },
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        paused: false,
        emitClose: false,
        autoDestroy: false,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     _events:
      [Object: null prototype] {
        end: [Array],
        drain: [Array],
        timeout: [Function: socketOnTimeout],
        data: [Function: bound socketOnData],
        error: [Function: socketOnError],
        close: [Array],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 8,
     _maxListeners: undefined,
     _writableState:
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        emitClose: false,
        autoDestroy: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server:
      Server {
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [TCP],
        _usingWorkers: false,
        _workers: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::8888',
        [Symbol(IncomingMessage)]: [Function],
        [Symbol(ServerResponse)]: [Function],
        [Symbol(asyncId)]: 87 },
     _server:
      Server {
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [TCP],
        _usingWorkers: false,
        _workers: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::8888',
        [Symbol(IncomingMessage)]: [Function],
        [Symbol(ServerResponse)]: [Function],
        [Symbol(asyncId)]: 87 },
     timeout: 120000,
     parser:
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: bound onParserExecute],
        _headers: [],
        _url: '',
        socket: [Circular],
        incoming: [IncomingMessage],
        outgoing: null,
        maxHeaderPairs: 2000,
        _consumed: true,
        onIncoming: [Function: bound parserOnIncoming],
        parsingHeadersStart: 1563592421098,
        [Symbol(isReused)]: false },
     on: [Function: socketOnWrap],
     _paused: false,
     _httpMessage: [Circular],
     [Symbol(asyncId)]: 134,
     [Symbol(lastWriteQueueSize)]: 0,
     [Symbol(timeout)]:
      Timeout {
        _called: false,
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 30694,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(unrefed)]: true,
        [Symbol(asyncId)]: 135,
        [Symbol(triggerId)]: 134 },
     [Symbol(kBytesRead)]: 0,
     [Symbol(kBytesWritten)]: 0 },
  _header: null,
  _onPendingData: [Function: bound updateOutgoingData],
  _sent100: false,
  _expect_continue: false,
  req:
   IncomingMessage {
     _readableState:
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: BufferList { head: null, tail: null, length: 0 },
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: true,
        endEmitted: true,
        reading: false,
        sync: false,
        needReadable: false,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        paused: false,
        emitClose: true,
        autoDestroy: false,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: false,
     _events:
      [Object: null prototype] { end: [Function: resetHeadersTimeoutOnReqEnd] },
     _eventsCount: 1,
     _maxListeners: undefined,
     socket:
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [TCP],
        _parent: null,
        _host: null,
        _readableState: [ReadableState],
        readable: true,
        _events: [Object],
        _eventsCount: 8,
        _maxListeners: undefined,
        _writableState: [WritableState],
        writable: true,
        allowHalfOpen: true,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Server],
        _server: [Server],
        timeout: 120000,
        parser: [HTTPParser],
        on: [Function: socketOnWrap],
        _paused: false,
        _httpMessage: [Circular],
        [Symbol(asyncId)]: 134,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]:
         Timeout {
           _called: false,
           _idleTimeout: 120000,
           _idlePrev: [TimersList],
           _idleNext: [TimersList],
           _idleStart: 30694,
           _onTimeout: [Function: bound ],
           _timerArgs: undefined,
           _repeat: null,
           _destroyed: false,
           [Symbol(unrefed)]: true,
           [Symbol(asyncId)]: 135,
           [Symbol(triggerId)]: 134 },
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0 },
     connection:
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [TCP],
        _parent: null,
        _host: null,
        _readableState: [ReadableState],
        readable: true,
        _events: [Object],
        _eventsCount: 8,
        _maxListeners: undefined,
        _writableState: [WritableState],
        writable: true,
        allowHalfOpen: true,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Server],
        _server: [Server],
        timeout: 120000,
        parser: [HTTPParser],
        on: [Function: socketOnWrap],
        _paused: false,
        _httpMessage: [Circular],
        [Symbol(asyncId)]: 134,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]:
         Timeout {
           _called: false,
           _idleTimeout: 120000,
           _idlePrev: [TimersList],
           _idleNext: [TimersList],
           _idleStart: 30694,
           _onTimeout: [Function: bound ],
           _timerArgs: undefined,
           _repeat: null,
           _destroyed: false,
           [Symbol(unrefed)]: true,
           [Symbol(asyncId)]: 135,
           [Symbol(triggerId)]: 134 },
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0 },
     httpVersionMajor: 1,
     httpVersionMinor: 1,
     httpVersion: '1.1',
     complete: true,
     headers:
      { 'content-type': 'application/x-www-form-urlencoded',
        'cache-control': 'no-cache',
        'postman-token': '87679bd6-a3ab-4f47-8378-ce14f5fe20a5',
        'user-agent': 'PostmanRuntime/7.6.0',
        accept: '*/*',
        host: 'localhost:8888',
        'accept-encoding': 'gzip, deflate',
        'content-length': '135',
        connection: 'keep-alive' },
     rawHeaders:
      [ 'Content-Type',
        'application/x-www-form-urlencoded',
        'cache-control',
        'no-cache',
        'Postman-Token',
        '87679bd6-a3ab-4f47-8378-ce14f5fe20a5',
        'User-Agent',
        'PostmanRuntime/7.6.0',
        'Accept',
        '*/*',
        'Host',
        'localhost:8888',
        'accept-encoding',
        'gzip, deflate',
        'content-length',
        '135',
        'Connection',
        'keep-alive' ],
     trailers: {},
     rawTrailers: [],
     aborted: false,
     upgrade: false,
     url: '/create',
     method: 'POST',
     statusCode: null,
     statusMessage: null,
     client:
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [TCP],
        _parent: null,
        _host: null,
        _readableState: [ReadableState],
        readable: true,
        _events: [Object],
        _eventsCount: 8,
        _maxListeners: undefined,
        _writableState: [WritableState],
        writable: true,
        allowHalfOpen: true,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Server],
        _server: [Server],
        timeout: 120000,
        parser: [HTTPParser],
        on: [Function: socketOnWrap],
        _paused: false,
        _httpMessage: [Circular],
        [Symbol(asyncId)]: 134,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]:
         Timeout {
           _called: false,
           _idleTimeout: 120000,
           _idlePrev: [TimersList],
           _idleNext: [TimersList],
           _idleStart: 30694,
           _onTimeout: [Function: bound ],
           _timerArgs: undefined,
           _repeat: null,
           _destroyed: false,
           [Symbol(unrefed)]: true,
           [Symbol(asyncId)]: 135,
           [Symbol(triggerId)]: 134 },
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0 },
     _consuming: true,
     _dumped: false,
     next: [Function: next],
     baseUrl: '/backend/user',
     originalUrl: '/backend/user/create',
     _parsedUrl:
      Url {
        protocol: null,
        slashes: null,
        auth: null,
        host: null,
        port: null,
        hostname: null,
        hash: null,
        search: null,
        query: null,
        pathname: '/create',
        path: '/create',
        href: '/create',
        _raw: '/create' },
     params: {},
     query: {},
     res: [Circular],
     body:
      { username: 'Admin',
        password: 'P@ssw0rd',
        fullname: 'Nguyễn Nhựt Huy',
        phone: '0389423079',
        birthday: '21/09/1996',
        position: 'Admin' },
     _body: true,
     length: undefined,
     route: Route { path: '/create', stack: [Array], methods: [Object] } },
  locals: [Object: null prototype] {},
  sendError: [Function],
  sendSuccess: [Function],
  [Symbol(isCorked)]: false,
  [Symbol(outHeadersKey)]:
   [Object: null prototype] {
     'x-powered-by': [ 'X-Powered-By', 'Express' ],
     'access-control-allow-origin': [ 'Access-Control-Allow-Origin', '*' ] } } at sendError (app.js:59:9)
[2019-07-20T10:15:09.837] [DEBUG] default - Starting server...! at <anonymous> (app.js:55:5)
[2019-07-20T10:15:09.904] [INFO] default - Connection to the database has been established successfully. at sequelize.authenticate.then (db/models/index.js:59:9)
[2019-07-20T10:15:09.908] [INFO] default - Listening on:  port 8888 at onListening (bin/www:81:7)
[2019-07-20T10:15:12.822] [DEBUG] default -  ==== Request information ====  at <anonymous> (app.js:93:7)
[2019-07-20T10:15:12.822] [DEBUG] default - Original URL:  /backend/user/create at <anonymous> (app.js:94:7)
[2019-07-20T10:15:12.822] [DEBUG] default - Method:  POST at <anonymous> (app.js:95:7)
[2019-07-20T10:15:12.823] [DEBUG] default - Path params:  {} at <anonymous> (app.js:96:7)
[2019-07-20T10:15:12.823] [DEBUG] default - Query params:  {} at <anonymous> (app.js:97:7)
[2019-07-20T10:15:12.823] [DEBUG] default -  ==== End request information ====  at <anonymous> (app.js:98:7)
[2019-07-20T10:15:12.903] [ERROR] default - { SequelizeValidationError: notNull Violation: Staff.staffPosition cannot be null
    at Promise.all.then (/home/mcbourdeux/Documents/MyProject/TNTT-Backend/node_modules/sequelize/lib/instance-validator.js:74:15)
    at tryCatcher (/home/mcbourdeux/Documents/MyProject/TNTT-Backend/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/home/mcbourdeux/Documents/MyProject/TNTT-Backend/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/home/mcbourdeux/Documents/MyProject/TNTT-Backend/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/home/mcbourdeux/Documents/MyProject/TNTT-Backend/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/home/mcbourdeux/Documents/MyProject/TNTT-Backend/node_modules/bluebird/js/release/promise.js:694:18)
    at Promise._fulfill (/home/mcbourdeux/Documents/MyProject/TNTT-Backend/node_modules/bluebird/js/release/promise.js:638:18)
    at PromiseArray._resolve (/home/mcbourdeux/Documents/MyProject/TNTT-Backend/node_modules/bluebird/js/release/promise_array.js:126:19)
    at PromiseArray._promiseFulfilled (/home/mcbourdeux/Documents/MyProject/TNTT-Backend/node_modules/bluebird/js/release/promise_array.js:144:14)
    at Promise._settlePromise (/home/mcbourdeux/Documents/MyProject/TNTT-Backend/node_modules/bluebird/js/release/promise.js:574:26)
    at Promise._settlePromise0 (/home/mcbourdeux/Documents/MyProject/TNTT-Backend/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/home/mcbourdeux/Documents/MyProject/TNTT-Backend/node_modules/bluebird/js/release/promise.js:694:18)
    at _drainQueueStep (/home/mcbourdeux/Documents/MyProject/TNTT-Backend/node_modules/bluebird/js/release/async.js:138:12)
    at _drainQueue (/home/mcbourdeux/Documents/MyProject/TNTT-Backend/node_modules/bluebird/js/release/async.js:131:9)
    at Async._drainQueues (/home/mcbourdeux/Documents/MyProject/TNTT-Backend/node_modules/bluebird/js/release/async.js:147:5)
    at Immediate.Async.drainQueues [as _onImmediate] (/home/mcbourdeux/Documents/MyProject/TNTT-Backend/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:705:18)
    at tryOnImmediate (timers.js:676:5)
    at processImmediate (timers.js:658:5)
  name: 'SequelizeValidationError',
  errors:
   [ ValidationErrorItem {
       message: 'Staff.staffPosition cannot be null',
       type: 'notNull Violation',
       path: 'staffPosition',
       value: null,
       origin: 'CORE',
       instance: [Staff],
       validatorKey: 'is_null',
       validatorName: null,
       validatorArgs: [] } ] } 'at Promise.resolve.then.then.then.catch (controllers/user.js:51:11)'
[2019-07-20T10:15:12.905] [ERROR] default - Error before sending response:  { SequelizeValidationError: notNull Violation: Staff.staffPosition cannot be null
    at Promise.all.then (/home/mcbourdeux/Documents/MyProject/TNTT-Backend/node_modules/sequelize/lib/instance-validator.js:74:15)
    at tryCatcher (/home/mcbourdeux/Documents/MyProject/TNTT-Backend/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/home/mcbourdeux/Documents/MyProject/TNTT-Backend/node_modules/bluebird/js/release/promise.js:512:31)
    at Promise._settlePromise (/home/mcbourdeux/Documents/MyProject/TNTT-Backend/node_modules/bluebird/js/release/promise.js:569:18)
    at Promise._settlePromise0 (/home/mcbourdeux/Documents/MyProject/TNTT-Backend/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/home/mcbourdeux/Documents/MyProject/TNTT-Backend/node_modules/bluebird/js/release/promise.js:694:18)
    at Promise._fulfill (/home/mcbourdeux/Documents/MyProject/TNTT-Backend/node_modules/bluebird/js/release/promise.js:638:18)
    at PromiseArray._resolve (/home/mcbourdeux/Documents/MyProject/TNTT-Backend/node_modules/bluebird/js/release/promise_array.js:126:19)
    at PromiseArray._promiseFulfilled (/home/mcbourdeux/Documents/MyProject/TNTT-Backend/node_modules/bluebird/js/release/promise_array.js:144:14)
    at Promise._settlePromise (/home/mcbourdeux/Documents/MyProject/TNTT-Backend/node_modules/bluebird/js/release/promise.js:574:26)
    at Promise._settlePromise0 (/home/mcbourdeux/Documents/MyProject/TNTT-Backend/node_modules/bluebird/js/release/promise.js:614:10)
    at Promise._settlePromises (/home/mcbourdeux/Documents/MyProject/TNTT-Backend/node_modules/bluebird/js/release/promise.js:694:18)
    at _drainQueueStep (/home/mcbourdeux/Documents/MyProject/TNTT-Backend/node_modules/bluebird/js/release/async.js:138:12)
    at _drainQueue (/home/mcbourdeux/Documents/MyProject/TNTT-Backend/node_modules/bluebird/js/release/async.js:131:9)
    at Async._drainQueues (/home/mcbourdeux/Documents/MyProject/TNTT-Backend/node_modules/bluebird/js/release/async.js:147:5)
    at Immediate.Async.drainQueues [as _onImmediate] (/home/mcbourdeux/Documents/MyProject/TNTT-Backend/node_modules/bluebird/js/release/async.js:17:14)
    at runCallback (timers.js:705:18)
    at tryOnImmediate (timers.js:676:5)
    at processImmediate (timers.js:658:5)
  name: 'SequelizeValidationError',
  errors:
   [ ValidationErrorItem {
       message: 'Staff.staffPosition cannot be null',
       type: 'notNull Violation',
       path: 'staffPosition',
       value: null,
       origin: 'CORE',
       instance: [Staff],
       validatorKey: 'is_null',
       validatorName: null,
       validatorArgs: [] } ] } at sendError (app.js:59:9)
[2019-07-20T10:16:19.992] [DEBUG] default - Starting server...! at <anonymous> (app.js:55:5)
[2019-07-20T10:16:20.057] [INFO] default - Connection to the database has been established successfully. at sequelize.authenticate.then (db/models/index.js:59:9)
[2019-07-20T10:16:20.061] [INFO] default - Listening on:  port 8888 at onListening (bin/www:81:7)
[2019-07-20T10:16:40.906] [DEBUG] default -  ==== Request information ====  at <anonymous> (app.js:93:7)
[2019-07-20T10:16:40.907] [DEBUG] default - Original URL:  /backend/user/create at <anonymous> (app.js:94:7)
[2019-07-20T10:16:40.907] [DEBUG] default - Method:  POST at <anonymous> (app.js:95:7)
[2019-07-20T10:16:40.907] [DEBUG] default - Path params:  {} at <anonymous> (app.js:96:7)
[2019-07-20T10:16:40.907] [DEBUG] default - Query params:  {} at <anonymous> (app.js:97:7)
[2019-07-20T10:16:40.907] [DEBUG] default -  ==== End request information ====  at <anonymous> (app.js:98:7)
[2019-07-20T10:16:40.995] [ERROR] default - { SequelizeDatabaseError: Incorrect string value: '\xE1\xBB\x85n N...' for column 'staff_fullname' at row 1
    at Query.formatError (/home/mcbourdeux/Documents/MyProject/TNTT-Backend/node_modules/sequelize/lib/dialects/mysql/query.js:243:16)
    at Execute.handler [as onResult] (/home/mcbourdeux/Documents/MyProject/TNTT-Backend/node_modules/sequelize/lib/dialects/mysql/query.js:50:23)
    at Execute.execute (/home/mcbourdeux/Documents/MyProject/TNTT-Backend/node_modules/mysql2/lib/commands/command.js:30:14)
    at Connection.handlePacket (/home/mcbourdeux/Documents/MyProject/TNTT-Backend/node_modules/mysql2/lib/connection.js:449:32)
    at PacketParser.Connection.packetParser.p [as onPacket] (/home/mcbourdeux/Documents/MyProject/TNTT-Backend/node_modules/mysql2/lib/connection.js:72:12)
    at PacketParser.executeStart (/home/mcbourdeux/Documents/MyProject/TNTT-Backend/node_modules/mysql2/lib/packet_parser.js:75:16)
    at Socket.Connection.stream.on.data (/home/mcbourdeux/Documents/MyProject/TNTT-Backend/node_modules/mysql2/lib/connection.js:79:25)
    at Socket.emit (events.js:198:13)
    at addChunk (_stream_readable.js:288:12)
    at readableAddChunk (_stream_readable.js:269:11)
    at Socket.Readable.push (_stream_readable.js:224:10)
    at TCP.onStreamRead [as onread] (internal/stream_base_commons.js:94:17)
  name: 'SequelizeDatabaseError',
  parent:
   { Error: Incorrect string value: '\xE1\xBB\x85n N...' for column 'staff_fullname' at row 1
       at Packet.asError (/home/mcbourdeux/Documents/MyProject/TNTT-Backend/node_modules/mysql2/lib/packets/packet.js:684:17)
       at Execute.execute (/home/mcbourdeux/Documents/MyProject/TNTT-Backend/node_modules/mysql2/lib/commands/command.js:28:26)
       at Connection.handlePacket (/home/mcbourdeux/Documents/MyProject/TNTT-Backend/node_modules/mysql2/lib/connection.js:449:32)
       at PacketParser.Connection.packetParser.p [as onPacket] (/home/mcbourdeux/Documents/MyProject/TNTT-Backend/node_modules/mysql2/lib/connection.js:72:12)
       at PacketParser.executeStart (/home/mcbourdeux/Documents/MyProject/TNTT-Backend/node_modules/mysql2/lib/packet_parser.js:75:16)
       at Socket.Connection.stream.on.data (/home/mcbourdeux/Documents/MyProject/TNTT-Backend/node_modules/mysql2/lib/connection.js:79:25)
       at Socket.emit (events.js:198:13)
       at addChunk (_stream_readable.js:288:12)
       at readableAddChunk (_stream_readable.js:269:11)
       at Socket.Readable.push (_stream_readable.js:224:10)
       at TCP.onStreamRead [as onread] (internal/stream_base_commons.js:94:17)
     code: 'ER_TRUNCATED_WRONG_VALUE_FOR_FIELD',
     errno: 1366,
     sqlState: 'HY000',
     sqlMessage:
      'Incorrect string value: \'\\xE1\\xBB\\x85n N...\' for column \'staff_fullname\' at row 1',
     sql:
      'INSERT INTO `staff` (`staff_id`,`staff_username`,`staff_password`,`staff_fullname`,`staff_phonenumber`,`staff_birthday`,`staff_position`,`is_first_time_login`) VALUES (DEFAULT,?,?,?,?,?,?,?);' },
  original:
   { Error: Incorrect string value: '\xE1\xBB\x85n N...' for column 'staff_fullname' at row 1
       at Packet.asError (/home/mcbourdeux/Documents/MyProject/TNTT-Backend/node_modules/mysql2/lib/packets/packet.js:684:17)
       at Execute.execute (/home/mcbourdeux/Documents/MyProject/TNTT-Backend/node_modules/mysql2/lib/commands/command.js:28:26)
       at Connection.handlePacket (/home/mcbourdeux/Documents/MyProject/TNTT-Backend/node_modules/mysql2/lib/connection.js:449:32)
       at PacketParser.Connection.packetParser.p [as onPacket] (/home/mcbourdeux/Documents/MyProject/TNTT-Backend/node_modules/mysql2/lib/connection.js:72:12)
       at PacketParser.executeStart (/home/mcbourdeux/Documents/MyProject/TNTT-Backend/node_modules/mysql2/lib/packet_parser.js:75:16)
       at Socket.Connection.stream.on.data (/home/mcbourdeux/Documents/MyProject/TNTT-Backend/node_modules/mysql2/lib/connection.js:79:25)
       at Socket.emit (events.js:198:13)
       at addChunk (_stream_readable.js:288:12)
       at readableAddChunk (_stream_readable.js:269:11)
       at Socket.Readable.push (_stream_readable.js:224:10)
       at TCP.onStreamRead [as onread] (internal/stream_base_commons.js:94:17)
     code: 'ER_TRUNCATED_WRONG_VALUE_FOR_FIELD',
     errno: 1366,
     sqlState: 'HY000',
     sqlMessage:
      'Incorrect string value: \'\\xE1\\xBB\\x85n N...\' for column \'staff_fullname\' at row 1',
     sql:
      'INSERT INTO `staff` (`staff_id`,`staff_username`,`staff_password`,`staff_fullname`,`staff_phonenumber`,`staff_birthday`,`staff_position`,`is_first_time_login`) VALUES (DEFAULT,?,?,?,?,?,?,?);' },
  sql:
   'INSERT INTO `staff` (`staff_id`,`staff_username`,`staff_password`,`staff_fullname`,`staff_phonenumber`,`staff_birthday`,`staff_position`,`is_first_time_login`) VALUES (DEFAULT,?,?,?,?,?,?,?);' } 'at Promise.resolve.then.then.then.catch (controllers/user.js:51:11)'
[2019-07-20T10:16:40.996] [ERROR] default - Error before sending response:  { SequelizeDatabaseError: Incorrect string value: '\xE1\xBB\x85n N...' for column 'staff_fullname' at row 1
    at Query.formatError (/home/mcbourdeux/Documents/MyProject/TNTT-Backend/node_modules/sequelize/lib/dialects/mysql/query.js:243:16)
    at Execute.handler [as onResult] (/home/mcbourdeux/Documents/MyProject/TNTT-Backend/node_modules/sequelize/lib/dialects/mysql/query.js:50:23)
    at Execute.execute (/home/mcbourdeux/Documents/MyProject/TNTT-Backend/node_modules/mysql2/lib/commands/command.js:30:14)
    at Connection.handlePacket (/home/mcbourdeux/Documents/MyProject/TNTT-Backend/node_modules/mysql2/lib/connection.js:449:32)
    at PacketParser.Connection.packetParser.p [as onPacket] (/home/mcbourdeux/Documents/MyProject/TNTT-Backend/node_modules/mysql2/lib/connection.js:72:12)
    at PacketParser.executeStart (/home/mcbourdeux/Documents/MyProject/TNTT-Backend/node_modules/mysql2/lib/packet_parser.js:75:16)
    at Socket.Connection.stream.on.data (/home/mcbourdeux/Documents/MyProject/TNTT-Backend/node_modules/mysql2/lib/connection.js:79:25)
    at Socket.emit (events.js:198:13)
    at addChunk (_stream_readable.js:288:12)
    at readableAddChunk (_stream_readable.js:269:11)
    at Socket.Readable.push (_stream_readable.js:224:10)
    at TCP.onStreamRead [as onread] (internal/stream_base_commons.js:94:17)
  name: 'SequelizeDatabaseError',
  parent:
   { Error: Incorrect string value: '\xE1\xBB\x85n N...' for column 'staff_fullname' at row 1
       at Packet.asError (/home/mcbourdeux/Documents/MyProject/TNTT-Backend/node_modules/mysql2/lib/packets/packet.js:684:17)
       at Execute.execute (/home/mcbourdeux/Documents/MyProject/TNTT-Backend/node_modules/mysql2/lib/commands/command.js:28:26)
       at Connection.handlePacket (/home/mcbourdeux/Documents/MyProject/TNTT-Backend/node_modules/mysql2/lib/connection.js:449:32)
       at PacketParser.Connection.packetParser.p [as onPacket] (/home/mcbourdeux/Documents/MyProject/TNTT-Backend/node_modules/mysql2/lib/connection.js:72:12)
       at PacketParser.executeStart (/home/mcbourdeux/Documents/MyProject/TNTT-Backend/node_modules/mysql2/lib/packet_parser.js:75:16)
       at Socket.Connection.stream.on.data (/home/mcbourdeux/Documents/MyProject/TNTT-Backend/node_modules/mysql2/lib/connection.js:79:25)
       at Socket.emit (events.js:198:13)
       at addChunk (_stream_readable.js:288:12)
       at readableAddChunk (_stream_readable.js:269:11)
       at Socket.Readable.push (_stream_readable.js:224:10)
       at TCP.onStreamRead [as onread] (internal/stream_base_commons.js:94:17)
     code: 'ER_TRUNCATED_WRONG_VALUE_FOR_FIELD',
     errno: 1366,
     sqlState: 'HY000',
     sqlMessage:
      'Incorrect string value: \'\\xE1\\xBB\\x85n N...\' for column \'staff_fullname\' at row 1',
     sql:
      'INSERT INTO `staff` (`staff_id`,`staff_username`,`staff_password`,`staff_fullname`,`staff_phonenumber`,`staff_birthday`,`staff_position`,`is_first_time_login`) VALUES (DEFAULT,?,?,?,?,?,?,?);' },
  original:
   { Error: Incorrect string value: '\xE1\xBB\x85n N...' for column 'staff_fullname' at row 1
       at Packet.asError (/home/mcbourdeux/Documents/MyProject/TNTT-Backend/node_modules/mysql2/lib/packets/packet.js:684:17)
       at Execute.execute (/home/mcbourdeux/Documents/MyProject/TNTT-Backend/node_modules/mysql2/lib/commands/command.js:28:26)
       at Connection.handlePacket (/home/mcbourdeux/Documents/MyProject/TNTT-Backend/node_modules/mysql2/lib/connection.js:449:32)
       at PacketParser.Connection.packetParser.p [as onPacket] (/home/mcbourdeux/Documents/MyProject/TNTT-Backend/node_modules/mysql2/lib/connection.js:72:12)
       at PacketParser.executeStart (/home/mcbourdeux/Documents/MyProject/TNTT-Backend/node_modules/mysql2/lib/packet_parser.js:75:16)
       at Socket.Connection.stream.on.data (/home/mcbourdeux/Documents/MyProject/TNTT-Backend/node_modules/mysql2/lib/connection.js:79:25)
       at Socket.emit (events.js:198:13)
       at addChunk (_stream_readable.js:288:12)
       at readableAddChunk (_stream_readable.js:269:11)
       at Socket.Readable.push (_stream_readable.js:224:10)
       at TCP.onStreamRead [as onread] (internal/stream_base_commons.js:94:17)
     code: 'ER_TRUNCATED_WRONG_VALUE_FOR_FIELD',
     errno: 1366,
     sqlState: 'HY000',
     sqlMessage:
      'Incorrect string value: \'\\xE1\\xBB\\x85n N...\' for column \'staff_fullname\' at row 1',
     sql:
      'INSERT INTO `staff` (`staff_id`,`staff_username`,`staff_password`,`staff_fullname`,`staff_phonenumber`,`staff_birthday`,`staff_position`,`is_first_time_login`) VALUES (DEFAULT,?,?,?,?,?,?,?);' },
  sql:
   'INSERT INTO `staff` (`staff_id`,`staff_username`,`staff_password`,`staff_fullname`,`staff_phonenumber`,`staff_birthday`,`staff_position`,`is_first_time_login`) VALUES (DEFAULT,?,?,?,?,?,?,?);' } at sendError (app.js:59:9)
[2019-07-20T10:20:05.858] [DEBUG] default - Starting server...! at <anonymous> (app.js:55:5)
[2019-07-20T10:20:05.912] [INFO] default - Connection to the database has been established successfully. at sequelize.authenticate.then (db/models/index.js:59:9)
[2019-07-20T10:20:05.933] [INFO] default - Listening on:  port 8888 at onListening (bin/www:81:7)
[2019-07-20T10:20:20.236] [DEBUG] default -  ==== Request information ====  at <anonymous> (app.js:93:7)
[2019-07-20T10:20:20.237] [DEBUG] default - Original URL:  /backend/user/create at <anonymous> (app.js:94:7)
[2019-07-20T10:20:20.237] [DEBUG] default - Method:  POST at <anonymous> (app.js:95:7)
[2019-07-20T10:20:20.237] [DEBUG] default - Path params:  {} at <anonymous> (app.js:96:7)
[2019-07-20T10:20:20.238] [DEBUG] default - Query params:  {} at <anonymous> (app.js:97:7)
[2019-07-20T10:20:20.238] [DEBUG] default -  ==== End request information ====  at <anonymous> (app.js:98:7)
[2019-07-20T10:20:20.310] [ERROR] default - { SequelizeDatabaseError: Incorrect string value: '\xE1\xBB\x85n N...' for column 'staff_fullname' at row 1
    at Query.formatError (/home/mcbourdeux/Documents/MyProject/TNTT-Backend/node_modules/sequelize/lib/dialects/mysql/query.js:243:16)
    at Execute.handler [as onResult] (/home/mcbourdeux/Documents/MyProject/TNTT-Backend/node_modules/sequelize/lib/dialects/mysql/query.js:50:23)
    at Execute.execute (/home/mcbourdeux/Documents/MyProject/TNTT-Backend/node_modules/mysql2/lib/commands/command.js:30:14)
    at Connection.handlePacket (/home/mcbourdeux/Documents/MyProject/TNTT-Backend/node_modules/mysql2/lib/connection.js:449:32)
    at PacketParser.Connection.packetParser.p [as onPacket] (/home/mcbourdeux/Documents/MyProject/TNTT-Backend/node_modules/mysql2/lib/connection.js:72:12)
    at PacketParser.executeStart (/home/mcbourdeux/Documents/MyProject/TNTT-Backend/node_modules/mysql2/lib/packet_parser.js:75:16)
    at Socket.Connection.stream.on.data (/home/mcbourdeux/Documents/MyProject/TNTT-Backend/node_modules/mysql2/lib/connection.js:79:25)
    at Socket.emit (events.js:198:13)
    at addChunk (_stream_readable.js:288:12)
    at readableAddChunk (_stream_readable.js:269:11)
    at Socket.Readable.push (_stream_readable.js:224:10)
    at TCP.onStreamRead [as onread] (internal/stream_base_commons.js:94:17)
  name: 'SequelizeDatabaseError',
  parent:
   { Error: Incorrect string value: '\xE1\xBB\x85n N...' for column 'staff_fullname' at row 1
       at Packet.asError (/home/mcbourdeux/Documents/MyProject/TNTT-Backend/node_modules/mysql2/lib/packets/packet.js:684:17)
       at Execute.execute (/home/mcbourdeux/Documents/MyProject/TNTT-Backend/node_modules/mysql2/lib/commands/command.js:28:26)
       at Connection.handlePacket (/home/mcbourdeux/Documents/MyProject/TNTT-Backend/node_modules/mysql2/lib/connection.js:449:32)
       at PacketParser.Connection.packetParser.p [as onPacket] (/home/mcbourdeux/Documents/MyProject/TNTT-Backend/node_modules/mysql2/lib/connection.js:72:12)
       at PacketParser.executeStart (/home/mcbourdeux/Documents/MyProject/TNTT-Backend/node_modules/mysql2/lib/packet_parser.js:75:16)
       at Socket.Connection.stream.on.data (/home/mcbourdeux/Documents/MyProject/TNTT-Backend/node_modules/mysql2/lib/connection.js:79:25)
       at Socket.emit (events.js:198:13)
       at addChunk (_stream_readable.js:288:12)
       at readableAddChunk (_stream_readable.js:269:11)
       at Socket.Readable.push (_stream_readable.js:224:10)
       at TCP.onStreamRead [as onread] (internal/stream_base_commons.js:94:17)
     code: 'ER_TRUNCATED_WRONG_VALUE_FOR_FIELD',
     errno: 1366,
     sqlState: 'HY000',
     sqlMessage:
      'Incorrect string value: \'\\xE1\\xBB\\x85n N...\' for column \'staff_fullname\' at row 1',
     sql:
      'INSERT INTO `staff` (`staff_id`,`staff_username`,`staff_password`,`staff_fullname`,`staff_phonenumber`,`staff_birthday`,`staff_position`,`is_first_time_login`) VALUES (DEFAULT,?,?,?,?,?,?,?);' },
  original:
   { Error: Incorrect string value: '\xE1\xBB\x85n N...' for column 'staff_fullname' at row 1
       at Packet.asError (/home/mcbourdeux/Documents/MyProject/TNTT-Backend/node_modules/mysql2/lib/packets/packet.js:684:17)
       at Execute.execute (/home/mcbourdeux/Documents/MyProject/TNTT-Backend/node_modules/mysql2/lib/commands/command.js:28:26)
       at Connection.handlePacket (/home/mcbourdeux/Documents/MyProject/TNTT-Backend/node_modules/mysql2/lib/connection.js:449:32)
       at PacketParser.Connection.packetParser.p [as onPacket] (/home/mcbourdeux/Documents/MyProject/TNTT-Backend/node_modules/mysql2/lib/connection.js:72:12)
       at PacketParser.executeStart (/home/mcbourdeux/Documents/MyProject/TNTT-Backend/node_modules/mysql2/lib/packet_parser.js:75:16)
       at Socket.Connection.stream.on.data (/home/mcbourdeux/Documents/MyProject/TNTT-Backend/node_modules/mysql2/lib/connection.js:79:25)
       at Socket.emit (events.js:198:13)
       at addChunk (_stream_readable.js:288:12)
       at readableAddChunk (_stream_readable.js:269:11)
       at Socket.Readable.push (_stream_readable.js:224:10)
       at TCP.onStreamRead [as onread] (internal/stream_base_commons.js:94:17)
     code: 'ER_TRUNCATED_WRONG_VALUE_FOR_FIELD',
     errno: 1366,
     sqlState: 'HY000',
     sqlMessage:
      'Incorrect string value: \'\\xE1\\xBB\\x85n N...\' for column \'staff_fullname\' at row 1',
     sql:
      'INSERT INTO `staff` (`staff_id`,`staff_username`,`staff_password`,`staff_fullname`,`staff_phonenumber`,`staff_birthday`,`staff_position`,`is_first_time_login`) VALUES (DEFAULT,?,?,?,?,?,?,?);' },
  sql:
   'INSERT INTO `staff` (`staff_id`,`staff_username`,`staff_password`,`staff_fullname`,`staff_phonenumber`,`staff_birthday`,`staff_position`,`is_first_time_login`) VALUES (DEFAULT,?,?,?,?,?,?,?);' } 'at Promise.resolve.then.then.then.catch (controllers/user.js:51:11)'
[2019-07-20T10:20:20.311] [ERROR] default - Error before sending response:  { SequelizeDatabaseError: Incorrect string value: '\xE1\xBB\x85n N...' for column 'staff_fullname' at row 1
    at Query.formatError (/home/mcbourdeux/Documents/MyProject/TNTT-Backend/node_modules/sequelize/lib/dialects/mysql/query.js:243:16)
    at Execute.handler [as onResult] (/home/mcbourdeux/Documents/MyProject/TNTT-Backend/node_modules/sequelize/lib/dialects/mysql/query.js:50:23)
    at Execute.execute (/home/mcbourdeux/Documents/MyProject/TNTT-Backend/node_modules/mysql2/lib/commands/command.js:30:14)
    at Connection.handlePacket (/home/mcbourdeux/Documents/MyProject/TNTT-Backend/node_modules/mysql2/lib/connection.js:449:32)
    at PacketParser.Connection.packetParser.p [as onPacket] (/home/mcbourdeux/Documents/MyProject/TNTT-Backend/node_modules/mysql2/lib/connection.js:72:12)
    at PacketParser.executeStart (/home/mcbourdeux/Documents/MyProject/TNTT-Backend/node_modules/mysql2/lib/packet_parser.js:75:16)
    at Socket.Connection.stream.on.data (/home/mcbourdeux/Documents/MyProject/TNTT-Backend/node_modules/mysql2/lib/connection.js:79:25)
    at Socket.emit (events.js:198:13)
    at addChunk (_stream_readable.js:288:12)
    at readableAddChunk (_stream_readable.js:269:11)
    at Socket.Readable.push (_stream_readable.js:224:10)
    at TCP.onStreamRead [as onread] (internal/stream_base_commons.js:94:17)
  name: 'SequelizeDatabaseError',
  parent:
   { Error: Incorrect string value: '\xE1\xBB\x85n N...' for column 'staff_fullname' at row 1
       at Packet.asError (/home/mcbourdeux/Documents/MyProject/TNTT-Backend/node_modules/mysql2/lib/packets/packet.js:684:17)
       at Execute.execute (/home/mcbourdeux/Documents/MyProject/TNTT-Backend/node_modules/mysql2/lib/commands/command.js:28:26)
       at Connection.handlePacket (/home/mcbourdeux/Documents/MyProject/TNTT-Backend/node_modules/mysql2/lib/connection.js:449:32)
       at PacketParser.Connection.packetParser.p [as onPacket] (/home/mcbourdeux/Documents/MyProject/TNTT-Backend/node_modules/mysql2/lib/connection.js:72:12)
       at PacketParser.executeStart (/home/mcbourdeux/Documents/MyProject/TNTT-Backend/node_modules/mysql2/lib/packet_parser.js:75:16)
       at Socket.Connection.stream.on.data (/home/mcbourdeux/Documents/MyProject/TNTT-Backend/node_modules/mysql2/lib/connection.js:79:25)
       at Socket.emit (events.js:198:13)
       at addChunk (_stream_readable.js:288:12)
       at readableAddChunk (_stream_readable.js:269:11)
       at Socket.Readable.push (_stream_readable.js:224:10)
       at TCP.onStreamRead [as onread] (internal/stream_base_commons.js:94:17)
     code: 'ER_TRUNCATED_WRONG_VALUE_FOR_FIELD',
     errno: 1366,
     sqlState: 'HY000',
     sqlMessage:
      'Incorrect string value: \'\\xE1\\xBB\\x85n N...\' for column \'staff_fullname\' at row 1',
     sql:
      'INSERT INTO `staff` (`staff_id`,`staff_username`,`staff_password`,`staff_fullname`,`staff_phonenumber`,`staff_birthday`,`staff_position`,`is_first_time_login`) VALUES (DEFAULT,?,?,?,?,?,?,?);' },
  original:
   { Error: Incorrect string value: '\xE1\xBB\x85n N...' for column 'staff_fullname' at row 1
       at Packet.asError (/home/mcbourdeux/Documents/MyProject/TNTT-Backend/node_modules/mysql2/lib/packets/packet.js:684:17)
       at Execute.execute (/home/mcbourdeux/Documents/MyProject/TNTT-Backend/node_modules/mysql2/lib/commands/command.js:28:26)
       at Connection.handlePacket (/home/mcbourdeux/Documents/MyProject/TNTT-Backend/node_modules/mysql2/lib/connection.js:449:32)
       at PacketParser.Connection.packetParser.p [as onPacket] (/home/mcbourdeux/Documents/MyProject/TNTT-Backend/node_modules/mysql2/lib/connection.js:72:12)
       at PacketParser.executeStart (/home/mcbourdeux/Documents/MyProject/TNTT-Backend/node_modules/mysql2/lib/packet_parser.js:75:16)
       at Socket.Connection.stream.on.data (/home/mcbourdeux/Documents/MyProject/TNTT-Backend/node_modules/mysql2/lib/connection.js:79:25)
       at Socket.emit (events.js:198:13)
       at addChunk (_stream_readable.js:288:12)
       at readableAddChunk (_stream_readable.js:269:11)
       at Socket.Readable.push (_stream_readable.js:224:10)
       at TCP.onStreamRead [as onread] (internal/stream_base_commons.js:94:17)
     code: 'ER_TRUNCATED_WRONG_VALUE_FOR_FIELD',
     errno: 1366,
     sqlState: 'HY000',
     sqlMessage:
      'Incorrect string value: \'\\xE1\\xBB\\x85n N...\' for column \'staff_fullname\' at row 1',
     sql:
      'INSERT INTO `staff` (`staff_id`,`staff_username`,`staff_password`,`staff_fullname`,`staff_phonenumber`,`staff_birthday`,`staff_position`,`is_first_time_login`) VALUES (DEFAULT,?,?,?,?,?,?,?);' },
  sql:
   'INSERT INTO `staff` (`staff_id`,`staff_username`,`staff_password`,`staff_fullname`,`staff_phonenumber`,`staff_birthday`,`staff_position`,`is_first_time_login`) VALUES (DEFAULT,?,?,?,?,?,?,?);' } at sendError (app.js:59:9)
[2019-07-20T10:21:24.227] [DEBUG] default -  ==== Request information ====  at <anonymous> (app.js:93:7)
[2019-07-20T10:21:24.227] [DEBUG] default - Original URL:  /backend/user/create at <anonymous> (app.js:94:7)
[2019-07-20T10:21:24.228] [DEBUG] default - Method:  POST at <anonymous> (app.js:95:7)
[2019-07-20T10:21:24.228] [DEBUG] default - Path params:  {} at <anonymous> (app.js:96:7)
[2019-07-20T10:21:24.228] [DEBUG] default - Query params:  {} at <anonymous> (app.js:97:7)
[2019-07-20T10:21:24.228] [DEBUG] default -  ==== End request information ====  at <anonymous> (app.js:98:7)
[2019-07-20T10:27:22.314] [DEBUG] default - Starting server...! at <anonymous> (app.js:55:5)
[2019-07-20T10:27:22.366] [INFO] default - Connection to the database has been established successfully. at sequelize.authenticate.then (db/models/index.js:59:9)
[2019-07-20T10:27:22.371] [INFO] default - Listening on:  port 8888 at onListening (bin/www:81:7)
[2019-07-20T10:27:27.904] [DEBUG] default -  ==== Request information ====  at <anonymous> (app.js:93:7)
[2019-07-20T10:27:27.904] [DEBUG] default - Original URL:  /backend/user/create at <anonymous> (app.js:94:7)
[2019-07-20T10:27:27.905] [DEBUG] default - Method:  POST at <anonymous> (app.js:95:7)
[2019-07-20T10:27:27.905] [DEBUG] default - Path params:  {} at <anonymous> (app.js:96:7)
[2019-07-20T10:27:27.905] [DEBUG] default - Query params:  {} at <anonymous> (app.js:97:7)
[2019-07-20T10:27:27.905] [DEBUG] default -  ==== End request information ====  at <anonymous> (app.js:98:7)
[2019-07-20T10:30:33.033] [DEBUG] default -  ==== Request information ====  at <anonymous> (app.js:93:7)
[2019-07-20T10:30:33.034] [DEBUG] default - Original URL:  /backend/user at <anonymous> (app.js:94:7)
[2019-07-20T10:30:33.034] [DEBUG] default - Method:  GET at <anonymous> (app.js:95:7)
[2019-07-20T10:30:33.034] [DEBUG] default - Path params:  {} at <anonymous> (app.js:96:7)
[2019-07-20T10:30:33.034] [DEBUG] default - Query params:  {} at <anonymous> (app.js:97:7)
[2019-07-20T10:30:33.034] [DEBUG] default -  ==== End request information ====  at <anonymous> (app.js:98:7)
[2019-07-20T10:33:01.032] [DEBUG] default - Starting server...! at <anonymous> (app.js:55:5)
[2019-07-20T10:33:01.084] [INFO] default - Connection to the database has been established successfully. at sequelize.authenticate.then (db/models/index.js:59:9)
[2019-07-20T10:33:01.089] [INFO] default - Listening on:  port 8888 at onListening (bin/www:81:7)
[2019-07-20T10:33:05.621] [DEBUG] default -  ==== Request information ====  at <anonymous> (app.js:93:7)
[2019-07-20T10:33:05.621] [DEBUG] default - Original URL:  /backend/user at <anonymous> (app.js:94:7)
[2019-07-20T10:33:05.621] [DEBUG] default - Method:  GET at <anonymous> (app.js:95:7)
[2019-07-20T10:33:05.621] [DEBUG] default - Path params:  {} at <anonymous> (app.js:96:7)
[2019-07-20T10:33:05.622] [DEBUG] default - Query params:  {} at <anonymous> (app.js:97:7)
[2019-07-20T10:33:05.622] [DEBUG] default -  ==== End request information ====  at <anonymous> (app.js:98:7)
[2019-07-20T10:33:05.623] [ERROR] default - Error before sending response:  ReferenceError: baseService is not defined
    at getAll (/home/mcbourdeux/Documents/MyProject/TNTT-Backend/controllers/user.js:18:3)
    at Layer.handle [as handle_request] (/home/mcbourdeux/Documents/MyProject/TNTT-Backend/node_modules/express/lib/router/layer.js:95:5)
    at next (/home/mcbourdeux/Documents/MyProject/TNTT-Backend/node_modules/express/lib/router/route.js:137:13)
    at Route.dispatch (/home/mcbourdeux/Documents/MyProject/TNTT-Backend/node_modules/express/lib/router/route.js:112:3)
    at Layer.handle [as handle_request] (/home/mcbourdeux/Documents/MyProject/TNTT-Backend/node_modules/express/lib/router/layer.js:95:5)
    at /home/mcbourdeux/Documents/MyProject/TNTT-Backend/node_modules/express/lib/router/index.js:281:22
    at Function.process_params (/home/mcbourdeux/Documents/MyProject/TNTT-Backend/node_modules/express/lib/router/index.js:335:12)
    at next (/home/mcbourdeux/Documents/MyProject/TNTT-Backend/node_modules/express/lib/router/index.js:275:10)
    at Function.handle (/home/mcbourdeux/Documents/MyProject/TNTT-Backend/node_modules/express/lib/router/index.js:174:3)
    at router (/home/mcbourdeux/Documents/MyProject/TNTT-Backend/node_modules/express/lib/router/index.js:47:12)
    at Layer.handle [as handle_request] (/home/mcbourdeux/Documents/MyProject/TNTT-Backend/node_modules/express/lib/router/layer.js:95:5)
    at trim_prefix (/home/mcbourdeux/Documents/MyProject/TNTT-Backend/node_modules/express/lib/router/index.js:317:13)
    at /home/mcbourdeux/Documents/MyProject/TNTT-Backend/node_modules/express/lib/router/index.js:284:7
    at Function.process_params (/home/mcbourdeux/Documents/MyProject/TNTT-Backend/node_modules/express/lib/router/index.js:335:12)
    at next (/home/mcbourdeux/Documents/MyProject/TNTT-Backend/node_modules/express/lib/router/index.js:275:10)
    at /home/mcbourdeux/Documents/MyProject/TNTT-Backend/app.js:100:3
    at Layer.handle [as handle_request] (/home/mcbourdeux/Documents/MyProject/TNTT-Backend/node_modules/express/lib/router/layer.js:95:5)
    at trim_prefix (/home/mcbourdeux/Documents/MyProject/TNTT-Backend/node_modules/express/lib/router/index.js:317:13)
    at /home/mcbourdeux/Documents/MyProject/TNTT-Backend/node_modules/express/lib/router/index.js:284:7
    at Function.process_params (/home/mcbourdeux/Documents/MyProject/TNTT-Backend/node_modules/express/lib/router/index.js:335:12)
    at next (/home/mcbourdeux/Documents/MyProject/TNTT-Backend/node_modules/express/lib/router/index.js:275:10)
    at upload (/home/mcbourdeux/Documents/MyProject/TNTT-Backend/app.js:88:5) at sendError (app.js:59:9)
[2019-07-20T10:33:20.914] [DEBUG] default - Starting server...! at <anonymous> (app.js:55:5)
[2019-07-20T10:33:20.966] [INFO] default - Connection to the database has been established successfully. at sequelize.authenticate.then (db/models/index.js:59:9)
[2019-07-20T10:33:20.971] [INFO] default - Listening on:  port 8888 at onListening (bin/www:81:7)
[2019-07-20T10:33:25.240] [DEBUG] default -  ==== Request information ====  at <anonymous> (app.js:93:7)
[2019-07-20T10:33:25.240] [DEBUG] default - Original URL:  /backend/user at <anonymous> (app.js:94:7)
[2019-07-20T10:33:25.241] [DEBUG] default - Method:  GET at <anonymous> (app.js:95:7)
[2019-07-20T10:33:25.241] [DEBUG] default - Path params:  {} at <anonymous> (app.js:96:7)
[2019-07-20T10:33:25.241] [DEBUG] default - Query params:  {} at <anonymous> (app.js:97:7)
[2019-07-20T10:33:25.241] [DEBUG] default -  ==== End request information ====  at <anonymous> (app.js:98:7)
[2019-07-20T10:33:25.242] [ERROR] default - Error before sending response:  TypeError: userService.getAllUser.then is not a function
    at getAll (/home/mcbourdeux/Documents/MyProject/TNTT-Backend/controllers/user.js:19:6)
    at Layer.handle [as handle_request] (/home/mcbourdeux/Documents/MyProject/TNTT-Backend/node_modules/express/lib/router/layer.js:95:5)
    at next (/home/mcbourdeux/Documents/MyProject/TNTT-Backend/node_modules/express/lib/router/route.js:137:13)
    at Route.dispatch (/home/mcbourdeux/Documents/MyProject/TNTT-Backend/node_modules/express/lib/router/route.js:112:3)
    at Layer.handle [as handle_request] (/home/mcbourdeux/Documents/MyProject/TNTT-Backend/node_modules/express/lib/router/layer.js:95:5)
    at /home/mcbourdeux/Documents/MyProject/TNTT-Backend/node_modules/express/lib/router/index.js:281:22
    at Function.process_params (/home/mcbourdeux/Documents/MyProject/TNTT-Backend/node_modules/express/lib/router/index.js:335:12)
    at next (/home/mcbourdeux/Documents/MyProject/TNTT-Backend/node_modules/express/lib/router/index.js:275:10)
    at Function.handle (/home/mcbourdeux/Documents/MyProject/TNTT-Backend/node_modules/express/lib/router/index.js:174:3)
    at router (/home/mcbourdeux/Documents/MyProject/TNTT-Backend/node_modules/express/lib/router/index.js:47:12)
    at Layer.handle [as handle_request] (/home/mcbourdeux/Documents/MyProject/TNTT-Backend/node_modules/express/lib/router/layer.js:95:5)
    at trim_prefix (/home/mcbourdeux/Documents/MyProject/TNTT-Backend/node_modules/express/lib/router/index.js:317:13)
    at /home/mcbourdeux/Documents/MyProject/TNTT-Backend/node_modules/express/lib/router/index.js:284:7
    at Function.process_params (/home/mcbourdeux/Documents/MyProject/TNTT-Backend/node_modules/express/lib/router/index.js:335:12)
    at next (/home/mcbourdeux/Documents/MyProject/TNTT-Backend/node_modules/express/lib/router/index.js:275:10)
    at /home/mcbourdeux/Documents/MyProject/TNTT-Backend/app.js:100:3
    at Layer.handle [as handle_request] (/home/mcbourdeux/Documents/MyProject/TNTT-Backend/node_modules/express/lib/router/layer.js:95:5)
    at trim_prefix (/home/mcbourdeux/Documents/MyProject/TNTT-Backend/node_modules/express/lib/router/index.js:317:13)
    at /home/mcbourdeux/Documents/MyProject/TNTT-Backend/node_modules/express/lib/router/index.js:284:7
    at Function.process_params (/home/mcbourdeux/Documents/MyProject/TNTT-Backend/node_modules/express/lib/router/index.js:335:12)
    at next (/home/mcbourdeux/Documents/MyProject/TNTT-Backend/node_modules/express/lib/router/index.js:275:10)
    at upload (/home/mcbourdeux/Documents/MyProject/TNTT-Backend/app.js:88:5) at sendError (app.js:59:9)
[2019-07-20T10:34:36.408] [DEBUG] default - Starting server...! at <anonymous> (app.js:55:5)
[2019-07-20T10:34:36.461] [INFO] default - Connection to the database has been established successfully. at sequelize.authenticate.then (db/models/index.js:59:9)
[2019-07-20T10:34:36.466] [INFO] default - Listening on:  port 8888 at onListening (bin/www:81:7)
[2019-07-20T10:34:39.639] [DEBUG] default -  ==== Request information ====  at <anonymous> (app.js:93:7)
[2019-07-20T10:34:39.639] [DEBUG] default - Original URL:  /backend/user at <anonymous> (app.js:94:7)
[2019-07-20T10:34:39.639] [DEBUG] default - Method:  GET at <anonymous> (app.js:95:7)
[2019-07-20T10:34:39.640] [DEBUG] default - Path params:  {} at <anonymous> (app.js:96:7)
[2019-07-20T10:34:39.640] [DEBUG] default - Query params:  {} at <anonymous> (app.js:97:7)
[2019-07-20T10:34:39.640] [DEBUG] default -  ==== End request information ====  at <anonymous> (app.js:98:7)
[2019-07-20T10:39:41.775] [DEBUG] default - Starting server...! at <anonymous> (app.js:55:5)
[2019-07-20T10:39:41.828] [INFO] default - Connection to the database has been established successfully. at sequelize.authenticate.then (db/models/index.js:59:9)
[2019-07-20T10:39:41.832] [INFO] default - Listening on:  port 8888 at onListening (bin/www:81:7)
[2019-07-20T10:39:45.561] [DEBUG] default -  ==== Request information ====  at <anonymous> (app.js:93:7)
[2019-07-20T10:39:45.562] [DEBUG] default - Original URL:  /backend/user at <anonymous> (app.js:94:7)
[2019-07-20T10:39:45.562] [DEBUG] default - Method:  GET at <anonymous> (app.js:95:7)
[2019-07-20T10:39:45.563] [DEBUG] default - Path params:  {} at <anonymous> (app.js:96:7)
[2019-07-20T10:39:45.563] [DEBUG] default - Query params:  {} at <anonymous> (app.js:97:7)
[2019-07-20T10:39:45.563] [DEBUG] default -  ==== End request information ====  at <anonymous> (app.js:98:7)
[2019-07-20T10:39:45.567] [ERROR] default - Cannot retreive users. Error:  { SequelizeDatabaseError: Unknown column 'staff_id' in 'field list'
    at Query.formatError (/home/mcbourdeux/Documents/MyProject/TNTT-Backend/node_modules/sequelize/lib/dialects/mysql/query.js:243:16)
    at Query.handler [as onResult] (/home/mcbourdeux/Documents/MyProject/TNTT-Backend/node_modules/sequelize/lib/dialects/mysql/query.js:50:23)
    at Query.execute (/home/mcbourdeux/Documents/MyProject/TNTT-Backend/node_modules/mysql2/lib/commands/command.js:30:14)
    at Connection.handlePacket (/home/mcbourdeux/Documents/MyProject/TNTT-Backend/node_modules/mysql2/lib/connection.js:449:32)
    at PacketParser.Connection.packetParser.p [as onPacket] (/home/mcbourdeux/Documents/MyProject/TNTT-Backend/node_modules/mysql2/lib/connection.js:72:12)
    at PacketParser.executeStart (/home/mcbourdeux/Documents/MyProject/TNTT-Backend/node_modules/mysql2/lib/packet_parser.js:75:16)
    at Socket.Connection.stream.on.data (/home/mcbourdeux/Documents/MyProject/TNTT-Backend/node_modules/mysql2/lib/connection.js:79:25)
    at Socket.emit (events.js:198:13)
    at addChunk (_stream_readable.js:288:12)
    at readableAddChunk (_stream_readable.js:269:11)
    at Socket.Readable.push (_stream_readable.js:224:10)
    at TCP.onStreamRead [as onread] (internal/stream_base_commons.js:94:17)
  name: 'SequelizeDatabaseError',
  parent:
   { Error: Unknown column 'staff_id' in 'field list'
       at Packet.asError (/home/mcbourdeux/Documents/MyProject/TNTT-Backend/node_modules/mysql2/lib/packets/packet.js:684:17)
       at Query.execute (/home/mcbourdeux/Documents/MyProject/TNTT-Backend/node_modules/mysql2/lib/commands/command.js:28:26)
       at Connection.handlePacket (/home/mcbourdeux/Documents/MyProject/TNTT-Backend/node_modules/mysql2/lib/connection.js:449:32)
       at PacketParser.Connection.packetParser.p [as onPacket] (/home/mcbourdeux/Documents/MyProject/TNTT-Backend/node_modules/mysql2/lib/connection.js:72:12)
       at PacketParser.executeStart (/home/mcbourdeux/Documents/MyProject/TNTT-Backend/node_modules/mysql2/lib/packet_parser.js:75:16)
       at Socket.Connection.stream.on.data (/home/mcbourdeux/Documents/MyProject/TNTT-Backend/node_modules/mysql2/lib/connection.js:79:25)
       at Socket.emit (events.js:198:13)
       at addChunk (_stream_readable.js:288:12)
       at readableAddChunk (_stream_readable.js:269:11)
       at Socket.Readable.push (_stream_readable.js:224:10)
       at TCP.onStreamRead [as onread] (internal/stream_base_commons.js:94:17)
     code: 'ER_BAD_FIELD_ERROR',
     errno: 1054,
     sqlState: '42S22',
     sqlMessage: 'Unknown column \'staff_id\' in \'field list\'',
     sql:
      'select staff_id as "staffId", \n            staff_username as "staffUserName", \n            staff_fullname as "staffFullName",\n            staff_phonenumber as "staffPhoneNumber",\n            staff_birthday as "staffBirthday",\n            staff_position as "sstaffPosition",\n            is_first_time_login as "isFirstTimeLogin"' },
  original:
   { Error: Unknown column 'staff_id' in 'field list'
       at Packet.asError (/home/mcbourdeux/Documents/MyProject/TNTT-Backend/node_modules/mysql2/lib/packets/packet.js:684:17)
       at Query.execute (/home/mcbourdeux/Documents/MyProject/TNTT-Backend/node_modules/mysql2/lib/commands/command.js:28:26)
       at Connection.handlePacket (/home/mcbourdeux/Documents/MyProject/TNTT-Backend/node_modules/mysql2/lib/connection.js:449:32)
       at PacketParser.Connection.packetParser.p [as onPacket] (/home/mcbourdeux/Documents/MyProject/TNTT-Backend/node_modules/mysql2/lib/connection.js:72:12)
       at PacketParser.executeStart (/home/mcbourdeux/Documents/MyProject/TNTT-Backend/node_modules/mysql2/lib/packet_parser.js:75:16)
       at Socket.Connection.stream.on.data (/home/mcbourdeux/Documents/MyProject/TNTT-Backend/node_modules/mysql2/lib/connection.js:79:25)
       at Socket.emit (events.js:198:13)
       at addChunk (_stream_readable.js:288:12)
       at readableAddChunk (_stream_readable.js:269:11)
       at Socket.Readable.push (_stream_readable.js:224:10)
       at TCP.onStreamRead [as onread] (internal/stream_base_commons.js:94:17)
     code: 'ER_BAD_FIELD_ERROR',
     errno: 1054,
     sqlState: '42S22',
     sqlMessage: 'Unknown column \'staff_id\' in \'field list\'',
     sql:
      'select staff_id as "staffId", \n            staff_username as "staffUserName", \n            staff_fullname as "staffFullName",\n            staff_phonenumber as "staffPhoneNumber",\n            staff_birthday as "staffBirthday",\n            staff_position as "sstaffPosition",\n            is_first_time_login as "isFirstTimeLogin"' },
  sql:
   'select staff_id as "staffId", \n            staff_username as "staffUserName", \n            staff_fullname as "staffFullName",\n            staff_phonenumber as "staffPhoneNumber",\n            staff_birthday as "staffBirthday",\n            staff_position as "sstaffPosition",\n            is_first_time_login as "isFirstTimeLogin"' } at userService.getAllUser.then.catch (controllers/user.js:23:11)
[2019-07-20T10:39:45.569] [ERROR] default - Error before sending response:  { SequelizeDatabaseError: Unknown column 'staff_id' in 'field list'
    at Query.formatError (/home/mcbourdeux/Documents/MyProject/TNTT-Backend/node_modules/sequelize/lib/dialects/mysql/query.js:243:16)
    at Query.handler [as onResult] (/home/mcbourdeux/Documents/MyProject/TNTT-Backend/node_modules/sequelize/lib/dialects/mysql/query.js:50:23)
    at Query.execute (/home/mcbourdeux/Documents/MyProject/TNTT-Backend/node_modules/mysql2/lib/commands/command.js:30:14)
    at Connection.handlePacket (/home/mcbourdeux/Documents/MyProject/TNTT-Backend/node_modules/mysql2/lib/connection.js:449:32)
    at PacketParser.Connection.packetParser.p [as onPacket] (/home/mcbourdeux/Documents/MyProject/TNTT-Backend/node_modules/mysql2/lib/connection.js:72:12)
    at PacketParser.executeStart (/home/mcbourdeux/Documents/MyProject/TNTT-Backend/node_modules/mysql2/lib/packet_parser.js:75:16)
    at Socket.Connection.stream.on.data (/home/mcbourdeux/Documents/MyProject/TNTT-Backend/node_modules/mysql2/lib/connection.js:79:25)
    at Socket.emit (events.js:198:13)
    at addChunk (_stream_readable.js:288:12)
    at readableAddChunk (_stream_readable.js:269:11)
    at Socket.Readable.push (_stream_readable.js:224:10)
    at TCP.onStreamRead [as onread] (internal/stream_base_commons.js:94:17)
  name: 'SequelizeDatabaseError',
  parent:
   { Error: Unknown column 'staff_id' in 'field list'
       at Packet.asError (/home/mcbourdeux/Documents/MyProject/TNTT-Backend/node_modules/mysql2/lib/packets/packet.js:684:17)
       at Query.execute (/home/mcbourdeux/Documents/MyProject/TNTT-Backend/node_modules/mysql2/lib/commands/command.js:28:26)
       at Connection.handlePacket (/home/mcbourdeux/Documents/MyProject/TNTT-Backend/node_modules/mysql2/lib/connection.js:449:32)
       at PacketParser.Connection.packetParser.p [as onPacket] (/home/mcbourdeux/Documents/MyProject/TNTT-Backend/node_modules/mysql2/lib/connection.js:72:12)
       at PacketParser.executeStart (/home/mcbourdeux/Documents/MyProject/TNTT-Backend/node_modules/mysql2/lib/packet_parser.js:75:16)
       at Socket.Connection.stream.on.data (/home/mcbourdeux/Documents/MyProject/TNTT-Backend/node_modules/mysql2/lib/connection.js:79:25)
       at Socket.emit (events.js:198:13)
       at addChunk (_stream_readable.js:288:12)
       at readableAddChunk (_stream_readable.js:269:11)
       at Socket.Readable.push (_stream_readable.js:224:10)
       at TCP.onStreamRead [as onread] (internal/stream_base_commons.js:94:17)
     code: 'ER_BAD_FIELD_ERROR',
     errno: 1054,
     sqlState: '42S22',
     sqlMessage: 'Unknown column \'staff_id\' in \'field list\'',
     sql:
      'select staff_id as "staffId", \n            staff_username as "staffUserName", \n            staff_fullname as "staffFullName",\n            staff_phonenumber as "staffPhoneNumber",\n            staff_birthday as "staffBirthday",\n            staff_position as "sstaffPosition",\n            is_first_time_login as "isFirstTimeLogin"' },
  original:
   { Error: Unknown column 'staff_id' in 'field list'
       at Packet.asError (/home/mcbourdeux/Documents/MyProject/TNTT-Backend/node_modules/mysql2/lib/packets/packet.js:684:17)
       at Query.execute (/home/mcbourdeux/Documents/MyProject/TNTT-Backend/node_modules/mysql2/lib/commands/command.js:28:26)
       at Connection.handlePacket (/home/mcbourdeux/Documents/MyProject/TNTT-Backend/node_modules/mysql2/lib/connection.js:449:32)
       at PacketParser.Connection.packetParser.p [as onPacket] (/home/mcbourdeux/Documents/MyProject/TNTT-Backend/node_modules/mysql2/lib/connection.js:72:12)
       at PacketParser.executeStart (/home/mcbourdeux/Documents/MyProject/TNTT-Backend/node_modules/mysql2/lib/packet_parser.js:75:16)
       at Socket.Connection.stream.on.data (/home/mcbourdeux/Documents/MyProject/TNTT-Backend/node_modules/mysql2/lib/connection.js:79:25)
       at Socket.emit (events.js:198:13)
       at addChunk (_stream_readable.js:288:12)
       at readableAddChunk (_stream_readable.js:269:11)
       at Socket.Readable.push (_stream_readable.js:224:10)
       at TCP.onStreamRead [as onread] (internal/stream_base_commons.js:94:17)
     code: 'ER_BAD_FIELD_ERROR',
     errno: 1054,
     sqlState: '42S22',
     sqlMessage: 'Unknown column \'staff_id\' in \'field list\'',
     sql:
      'select staff_id as "staffId", \n            staff_username as "staffUserName", \n            staff_fullname as "staffFullName",\n            staff_phonenumber as "staffPhoneNumber",\n            staff_birthday as "staffBirthday",\n            staff_position as "sstaffPosition",\n            is_first_time_login as "isFirstTimeLogin"' },
  sql:
   'select staff_id as "staffId", \n            staff_username as "staffUserName", \n            staff_fullname as "staffFullName",\n            staff_phonenumber as "staffPhoneNumber",\n            staff_birthday as "staffBirthday",\n            staff_position as "sstaffPosition",\n            is_first_time_login as "isFirstTimeLogin"' } at sendError (app.js:59:9)
[2019-07-20T10:40:12.661] [DEBUG] default - Starting server...! at <anonymous> (app.js:55:5)
[2019-07-20T10:40:12.712] [INFO] default - Connection to the database has been established successfully. at sequelize.authenticate.then (db/models/index.js:59:9)
[2019-07-20T10:40:12.716] [INFO] default - Listening on:  port 8888 at onListening (bin/www:81:7)
[2019-07-20T10:40:14.692] [DEBUG] default -  ==== Request information ====  at <anonymous> (app.js:93:7)
[2019-07-20T10:40:14.693] [DEBUG] default - Original URL:  /backend/user at <anonymous> (app.js:94:7)
[2019-07-20T10:40:14.693] [DEBUG] default - Method:  GET at <anonymous> (app.js:95:7)
[2019-07-20T10:40:14.693] [DEBUG] default - Path params:  {} at <anonymous> (app.js:96:7)
[2019-07-20T10:40:14.693] [DEBUG] default - Query params:  {} at <anonymous> (app.js:97:7)
[2019-07-20T10:40:14.694] [DEBUG] default -  ==== End request information ====  at <anonymous> (app.js:98:7)
